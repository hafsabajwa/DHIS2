"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppWrapper = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _ui = require("@dhis2/ui");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useLocale = require("../utils/useLocale.js");

var _useVerifyLatestUser = require("../utils/useVerifyLatestUser.js");

var _Alerts = require("./Alerts.js");

var _ErrorBoundary = require("./ErrorBoundary.js");

var _LoadingMask = require("./LoadingMask.js");

var _PWAUpdateManager = _interopRequireDefault(require("./PWAUpdateManager.js"));

var _AppWrapperStyle = require("./styles/AppWrapper.style.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const AppWrapper = ({
  appName,
  children,
  offlineInterface
}) => {
  const {
    loading: localeLoading
  } = (0, _useLocale.useCurrentUserLocale)();
  const {
    loading: latestUserLoading
  } = (0, _useVerifyLatestUser.useVerifyLatestUser)();

  if (localeLoading || latestUserLoading) {
    return /*#__PURE__*/_react.default.createElement(_LoadingMask.LoadingMask, null);
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: `jsx-${_AppWrapperStyle.styles.__hash}` + " " + "app-shell-adapter"
  }, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: _AppWrapperStyle.styles.__hash
  }, _AppWrapperStyle.styles), /*#__PURE__*/_react.default.createElement(_ui.HeaderBar, {
    appName: appName
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: `jsx-${_AppWrapperStyle.styles.__hash}` + " " + "app-shell-app"
  }, /*#__PURE__*/_react.default.createElement(_ErrorBoundary.ErrorBoundary, {
    onRetry: () => window.location.reload()
  }, children)), /*#__PURE__*/_react.default.createElement(_Alerts.Alerts, null), /*#__PURE__*/_react.default.createElement(_PWAUpdateManager.default, {
    offlineInterface: offlineInterface
  }));
};

exports.AppWrapper = AppWrapper;
AppWrapper.propTypes = {
  appName: _propTypes.default.string.isRequired,
  offlineInterface: _propTypes.default.object.isRequired,
  children: _propTypes.default.node
};